// This script generated by Hifive UI Creator
// Hifive Games - Gokhan Yahya TORBA 2020

using UnityEngine;
using System.Collections.Generic;
using UnityEngine.UI;
using TMPro;

namespace Framework
{
    public class UIManager : MonoBehaviour
    {
        [Header("Managers")] [SerializeField] private HomeUI _HomeUI;
        public HomeUI HOMEUI => _HomeUI;

        [Header("Menu Elements")] public GameObject levelComplete;
        public GameObject levelFail;
        public GameObject menu;
        public GameObject play;
        public TextMeshProUGUI coin;

        [Header("UI Elements")] public Slider sliderBar;
        public Slider matchSliderBar;
        public GameObject vignette;
        public Image enemyTracker;

        [Header("Tutorial")] public TextMeshProUGUI tutorialText;
        public TextMeshProUGUI tutorialGameText;


        [Header("Vibration")] public Sprite on;
        public Sprite off;

        [Header("Upgrade Buttons")] public GameObject upgradeButtons;


        private static UIManager _instance = null;
        public static UIManager Instance => _instance;

        private static int _vibration = 1;
        private float _startMoney = 100f;

        private void Awake()
        {
            tutorialText.gameObject.SetActive(true);
            tutorialGameText.gameObject.SetActive(false);
            //upgradeButtons.SetActive(false);
            if (_instance != null && _instance != this)
            {
                Destroy(this.gameObject);
            }

            _instance = this;

            if (PlayerPrefs.HasKey("Vibration"))
            {
                _vibration = PlayerPrefs.GetInt("Vibration");
            }

            var coinFirst = _startMoney;
            if (PlayerPrefs.HasKey("Coin"))
                coinFirst = PlayerPrefs.GetFloat("Coin");
            else
                PlayerPrefs.SetFloat("Coin", _startMoney);

            coin.text = "" + coinFirst;
        }


        private void Start()
        {
#if UNITY_IOS
            if (UnityEngine.iOS.Device.generation.ToString().Contains("iPad"))
            {
                Debug.Log("iPad device detected! Canvas Scaler Match Size increased to 1f");
                CanvasScaler[] scalers = GetComponents<CanvasScaler>();
                foreach (CanvasScaler canvasScaler in scalers)
                {
                    canvasScaler.matchWidthOrHeight = 1f;
                }
            }
            else
            {
                Debug.Log("iPad device not detected! Canvas Scaler Match Size set to default");
            }
#endif
        }


        public void ShowPanel(GameObject pnl)
        {
            menu.SetActive(false);
            levelComplete.SetActive(false);
            levelFail.SetActive(false);
            if (pnl != null)
                pnl.SetActive(true);

            play.SetActive(!levelComplete.activeInHierarchy);
            // menu.SetActive(!levelComplete.activeInHierarchy);
        }

        public void ButtonPlayClick()
        {
            GameManager.instance.prepeareLevel();
            GameManager.instance.gameState = Consts.GameState.play;
            matchSliderBar.gameObject.SetActive(true);
            sliderBar.gameObject.SetActive(false);
            tutorialGameText.gameObject.SetActive(true);
        }


        public void ButtonNextLevelClick()
        {
            GameManager.instance.prepeareTraningLevel();
            GameManager.instance.gameState = Consts.GameState.idle;
            ShowPanel(null);
            menu.SetActive(true);
            matchSliderBar.gameObject.SetActive(false);
            sliderBar.gameObject.SetActive(true);
            //btnPlayClick();
        }

        public void VibrateControl(Image img)
        {
            if (_vibration == 1)
            {
                _vibration = 0;
                img.sprite = off;
            }
            else
            {
                _vibration = 1;
                img.sprite = on;
            }

            PlayerPrefs.SetInt("Vibration", _vibration);
        }

        public void GameIsStart()
        {
            tutorialText.gameObject.SetActive(false);
            tutorialGameText.gameObject.SetActive(false);
            upgradeButtons.SetActive(true);
        }
    }
}